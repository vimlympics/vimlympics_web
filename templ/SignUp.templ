package templ

import (
	"fmt"
	"github.com/vimlympics/vimlympics_web/model"
	"strings"
)

templ Profile(username string, currentcountry, apikey string) {
	<div class="container mx-auto px-4 md:px-6 py-12 lg:py-16">
		<div class="max-w-3xl mx-auto">
			<div class="flex flex-col md:flex-row items-start md:items-center gap-8">
				<div class="flex-1 space-y-4">
					<div class="grid gap-1">
						<label
							class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
							for="name"
						>
							Name
						</label>
						<input
							class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							id="name"
							disabled
							value={ username }
						/>
					</div>
					<div class="grid gap-1">
						<span>
							API Key:
							<input type="password" id="apikey" value={ apikey }/>
							<button type="button" onclick="togglePassword()">Reveal</button>
							<button type="button" onclick="copyToClipboard()">Copy</button>
							<script>
							function togglePassword() {
								var passwordField = document.getElementById("apikey");
								if (passwordField.type === "password") {
									passwordField.type = "text";
								} else {
									passwordField.type = "password";
								}
							}
							function copyToClipboard() {
								var copyText = document.getElementById("apikey");
								prevType = copyText.type;
								copyText.type = "text";
								copyText.select();
								copyText.setSelectionRange(0, 99999);
								document.execCommand("copy");
								copyText.type = prevType;
							}
						</script>
						</span>
					</div>
					<div class="grid gap-1" id="countryselect">
						<div class="grid gap-1">
							<span>
								Current country:
								<i class={ fmt.Sprintf("cf-32 cf-%s", strings.ToLower(currentcountry)) }></i>
								{ model.ISO3166[currentcountry].Name }
							</span>
						</div>
						<div class="grid gap-1">
							<label
								class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
								for="country"
							>
								Country
							</label>
							<select
								hx-patch="/profile/updatecountry"
								hx-target="#countryselect"
								role="combobox"
								name="country"
								aria-controls="radix-:r1:"
								aria-expanded="false"
								aria-autocomplete="none"
								dir="ltr"
								data-state="closed"
								data-placeholder=""
								class="flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
							>
								<option value="" disabled selected>Select country</option>
								for _, country := range model.SortedKeys {
									<option value={ country }>
										{ fmt.Sprintf("%s - %s", country,
								model.ISO3166[country].Name) }
									</option>
								}
							</select>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ UpdateSuccess(country string) {
	<div class="grid gap-1">
		Country Updated to { country }
	</div>
}
